<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:pw="https://opensource.panuon.com/wpf"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources"
                    xmlns:its="clr-namespace:Panuon.WPF.UI.Internal.TemplateSelectors">

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.NumberInputTemplate}"
                     TargetType="local:NumberInput">
        <ControlTemplate.Resources>
            <its:WatermarkTemplateSelector x:Key="WatermarkTemplateSelector" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="BdrContainer"
                    Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    CornerRadius="{Binding Path=(i:VisualStateHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                    Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Border Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <DockPanel x:Name="DockContainer"
                           TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                           TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <i:IconPresenter x:Name="IpIcon"
                                     Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Margin="{Binding Path=(local:IconHelper.Margin), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Width="{Binding Path=(local:IconHelper.Width), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Height="{Binding Path=(local:IconHelper.Height), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MinWidth="{Binding Path=(local:IconHelper.MinWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MinHeight="{Binding Path=(local:IconHelper.MinHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MaxWidth="{Binding Path=(local:IconHelper.MaxWidth), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     MaxHeight="{Binding Path=(local:IconHelper.MaxHeight), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     HorizontalContentAlignment="{Binding Path=(local:IconHelper.HorizontalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     VerticalContentAlignment="{Binding Path=(local:IconHelper.VerticalAlignment), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     Foreground="{Binding Path=(local:IconHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     FontFamily="{Binding Path=(local:IconHelper.FontFamily), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     FontSize="{Binding Path=(local:IconHelper.FontSize), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                     ToolTip="{Binding Path=(local:IconHelper.ToolTip), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                        <i:IconPresenter.Visibility>
                            <MultiBinding Converter="{x:Static irs:Converters.IconVisibilityConverter}">
                                <Binding Path="Icon"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                                <Binding Path="(local:IconHelper.HiddenOnNull)"
                                         RelativeSource="{RelativeSource TemplatedParent}"
                                         Mode="OneWay" />
                            </MultiBinding>
                        </i:IconPresenter.Visibility>
                    </i:IconPresenter>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="PART_InputTextBox"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                 local:TextBoxHelper.Hook="True"
                                 local:TextBoxHelper.InputLimit="Digit,Point"
                                 local:TextBoxHelper.SelectAllOnFocus="{TemplateBinding SelectAllOnFocus}">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="InputMethod.IsInputMethodEnabled"
                                            Value="False" />
                                    <Setter Property="VerticalContentAlignment"
                                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                                    <Setter Property="Padding"
                                            Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}" />
                                    <Setter Property="CaretBrush"
                                            Value="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <ScrollViewer x:Name="PART_ContentHost"
                                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Border Margin="{TemplateBinding Padding}">
                            <ContentControl Margin="2,0,0,0"
                                            IsHitTestVisible="False"
                                            Focusable="False"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            Visibility="{Binding Text, Converter={x:Static pw:Converters.StringNonnullAndNotEmptyToCollapseConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                                            Content="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            ContentTemplateSelector="{StaticResource WatermarkTemplateSelector}"
                                            Foreground="{Binding Path=(i:VisualStateHelper.WatermarkForeground),RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Border>
                        <Button x:Name="BtnClear"
                                Grid.Column="1"
                                Visibility="Collapsed"
                                Style="{TemplateBinding ClearButtonStyle}"
                                Command="{TemplateBinding ClearCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=local:NumberInput}}" />
                        <Grid x:Name="GrdUpDown"
                              Grid.Column="2"
                              Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <RepeatButton x:Name="PART_UpButton"
                                          Tag="Up"
                                          Style="{TemplateBinding UpDownButtonStyle}"
                                          Command="{Binding UpCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                            <RepeatButton x:Name="PART_DownButton"
                                          Tag="Down"
                                          Style="{TemplateBinding UpDownButtonStyle}"
                                          Command="{Binding DownCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Grid>
                    </Grid>
                </DockPanel>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly"
                     Value="True">
                <Setter TargetName="BtnClear"
                        Property="IsHitTestVisible"
                        Value="False" />
                <Setter TargetName="PART_UpButton"
                        Property="IsHitTestVisible"
                        Value="False" />
                <Setter TargetName="PART_DownButton"
                        Property="IsHitTestVisible"
                        Value="False" />
            </Trigger>
            <Trigger Property="UpDownButtonsOrientation"
                     Value="Horizontal">
                <Setter TargetName="PART_UpButton"
                        Property="Grid.RowSpan"
                        Value="2" />
                <Setter TargetName="PART_DownButton"
                        Property="Grid.Column"
                        Value="1" />
                <Setter TargetName="PART_DownButton"
                        Property="Grid.RowSpan"
                        Value="2" />
            </Trigger>
            <Trigger Property="UpDownButtonsOrientation"
                     Value="Vertical">
                <Setter TargetName="PART_UpButton"
                        Property="Grid.ColumnSpan"
                        Value="2" />
                <Setter TargetName="PART_DownButton"
                        Property="Grid.Row"
                        Value="1" />
                <Setter TargetName="PART_DownButton"
                        Property="Grid.ColumnSpan"
                        Value="2" />
            </Trigger>
            <Trigger  Property="ClearButtonVisibility"
                      Value="Visible">
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ClearButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ClearButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ClearButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ClearButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ClearButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="BtnClear"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <Trigger  Property="UpDownButtonVisibility"
                      Value="Visible">
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UpDownButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="UpDownButtonVisibility"
                               Value="VisibleOnHover" />
                    <Condition Property="IsMouseOver"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UpDownButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnHoverAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="UpDownButtonVisibility"
                               Value="VisibleOnFocused" />
                    <Condition Property="IsKeyboardFocusWithin"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </MultiTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding UpDownButtonVisibility, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="VisibleOnFocusedAndNonnull" />
                    <Condition Binding="{Binding Text, Converter={x:Static pw:Converters.IsStringNonnullAndNotEmptyConverter}, ElementName=PART_InputTextBox, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="GrdUpDown"
                        Property="Visibility"
                        Value="Visible" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>
