<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.WPF.UI"
                    xmlns:pw="https://opensource.panuon.com/wpf"
                    xmlns:i="clr-namespace:Panuon.WPF.UI.Internal"
                    xmlns:rs="clr-namespace:Panuon.WPF.UI.Resources"
                    xmlns:irs="clr-namespace:Panuon.WPF.UI.Internal.Resources">

    <ControlTemplate x:Key="{x:Static irs:TemplateKeys.RadioButtonTemplate}"
                     TargetType="RadioButton">
        <Grid Background="Transparent">
            <Border Background="Transparent"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Effect="{Binding Path=(i:VisualStateHelper.Effect), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            <Grid Margin="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border x:Name="CcBox"
                        Height="{Binding Path=(local:RadioButtonHelper.BoxRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Width="{Binding Path=(local:RadioButtonHelper.BoxRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        Background="{Binding Path=(i:VisualStateHelper.Background), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        BorderBrush="{Binding Path=(i:VisualStateHelper.BorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        BorderThickness="{Binding Path=(i:VisualStateHelper.BorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                        CornerRadius="{Binding Path=(local:RadioButtonHelper.BoxRadius), Converter={x:Static pw:Converters.DoubleToCornerRadiusConverter}, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                </Border>
                <Grid Height="{Binding Path=(local:RadioButtonHelper.BoxRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                      Width="{Binding Path=(local:RadioButtonHelper.BoxRadius), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
                    <Ellipse x:Name="EllToggle"
                             SnapsToDevicePixels="False"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             Width="{Binding Path=(local:RadioButtonHelper.ToggleRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             Height="{Binding Path=(local:RadioButtonHelper.ToggleRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             Fill="{Binding Path=(i:VisualStateHelper.ToggleBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             RenderTransformOrigin="0.5,0.5">
                    </Ellipse>
                    <Ellipse x:Name="EllCheckedToggle"
                             SnapsToDevicePixels="False"
                             VerticalAlignment="Center"
                             HorizontalAlignment="Center"
                             Width="{Binding Path=(local:RadioButtonHelper.ToggleRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             Height="{Binding Path=(local:RadioButtonHelper.ToggleRadius), Converter={x:Static pw:Converters.DoubleMultiplyByConverter}, ConverterParameter=2, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             Fill="{Binding Path=(local:RadioButtonHelper.CheckedToggleBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                             RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <ScaleTransform x:Name="sclToggle"
                                            ScaleX="{Binding Path=(i:VisualStateHelper.Percent), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                            ScaleY="{Binding Path=(i:VisualStateHelper.Percent), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Grid>
                <ContentPresenter x:Name="CpContent"
                                  Grid.Column="1"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  TextElement.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                  TextBlock.Foreground="{Binding Path=(i:VisualStateHelper.Foreground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                  Margin="{TemplateBinding Padding}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="local:CheckBoxHelper.ContentPlacement"
                     Value="Left">
                <Setter TargetName="CcBox"
                        Property="Grid.Column"
                        Value="2" />
            </Trigger>
            <Trigger Property="local:CheckBoxHelper.ContentPlacement"
                     Value="Right">
                <Setter TargetName="CcBox"
                        Property="Grid.Column"
                        Value="0" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedContent), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="Content"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedContent), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedBackground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="Background"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedBorderBrush), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedBorderThickness), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.CheckedForeground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:RadioButtonHelper.CheckedForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.NullBackground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="Background"
                        Value="{Binding Path=(local:RadioButtonHelper.NullBackground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.NullBorderBrush), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderBrush"
                        Value="{Binding Path=(local:RadioButtonHelper.NullBorderBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.NullBorderThickness), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CcBox"
                        Property="BorderThickness"
                        Value="{Binding Path=(local:RadioButtonHelper.NullBorderThickness), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.NullForeground), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CpContent"
                        Property="TextElement.Foreground"
                        Value="{Binding Path=(local:RadioButtonHelper.NullForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="CpContent"
                        Property="TextBlock.Foreground"
                        Value="{Binding Path=(local:RadioButtonHelper.NullForeground), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="{x:Null}" />
                    <Condition Binding="{Binding Path=(local:RadioButtonHelper.NullToggleBrush), Converter={x:Static pw:Converters.IsNonnullConverter}, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="EllToggle"
                        Property="Fill"
                        Value="{Binding Path=(local:RadioButtonHelper.NullToggleBrush), RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
                <Setter TargetName="EllToggle"
                        Property="RenderTransform"
                        Value="{x:Null}" />
            </MultiDataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
